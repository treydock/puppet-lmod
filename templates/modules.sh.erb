#!/bin/sh
# -*- shell-script -*-
########################################################################
#  This file is managed by Puppet, do not modify!
#
#  This is the system wide source file for setting up
#  modules:
#
########################################################################

if [ -z "${USER_IS_ROOT:-}" ]; then

  if [ -z "${MODULEPATH_ROOT:-}" ]; then
    export USER=${USER-${LOGNAME}} # make sure $USER is set
    export LMOD_sys=`uname`

    LMOD_arch=`uname -m`
    if [ "x$LMOD_sys" = xAIX ]; then
      LMOD_arch=rs6k
    fi
    export LMOD_arch

    export MODULEPATH_ROOT="<%= scope.lookupvar('lmod::modulepath_root') %>"
    export LMOD_SETTARG_CMD=":"
    export LMOD_FULL_SETTARG_SUPPORT=no
    export LMOD_COLORIZE=yes
    export LMOD_PREPEND_BLOCK=normal
<% scope.lookupvar('lmod::modulepaths').each do |modulepath| -%>
  <%- if modulepath =~ %r{^/} %>
    export MODULEPATH=$(<%= scope.lookupvar('lmod::prefix') %>/lmod/lmod/libexec/addto --append MODULEPATH <%= modulepath %>)
  <%- else %>
    export MODULEPATH=$(<%= scope.lookupvar('lmod::prefix') %>/lmod/lmod/libexec/addto --append MODULEPATH $MODULEPATH_ROOT/<%= modulepath %>)
  <%- end %>
<% end -%>
    export MODULEPATH=$(<%= scope.lookupvar('lmod::prefix') %>/lmod/lmod/libexec/addto --append MODULEPATH <%= scope.lookupvar('lmod::prefix') %>/lmod/lmod/modulefiles/Core)
    export MODULESHOME=<%= scope.lookupvar('lmod::prefix') %>/lmod/lmod

    export BASH_ENV=$MODULESHOME/init/bash

    #
    # If MANPATH is empty, Lmod is adding a trailing ":" so that
    # the system MANPATH will be found
    if [ -z "${MANPATH:-}" ]; then
      export MANPATH=:
    fi
    export MANPATH=$(<%= scope.lookupvar('lmod::prefix') %>/lmod/lmod/libexec/addto MANPATH <%= scope.lookupvar('lmod::prefix') %>/lmod/lmod/share/man)

<% if scope.lookupvar('lmod::set_lmod_package_path') -%>
    export LMOD_PACKAGE_PATH=<%= scope.lookupvar('lmod::lmod_package_path') %>
<% end -%>
<% unless scope.lookupvar('lmod::avail_styles').empty? -%>
    export LMOD_AVAIL_STYLE=<%= scope.lookupvar('lmod::avail_styles').join(':') %>
<% end -%>
<% if scope.lookupvar('lmod::lmod_admin_file') -%>
    export LMOD_ADMIN_FILE=<%= scope.lookupvar('lmod::lmod_admin_file') %>
<% end -%>
<% if scope.lookupvar('lmod::system_name') -%>
    export LMOD_SYSTEM_NAME=<%= scope.lookupvar('lmod::system_name') %>
<% end -%>
<% if scope.lookupvar('lmod::site_name') -%>
    export LMOD_SITE_NAME=<%= scope.lookupvar('lmod::site_name') %>
<% end -%>
<% if scope.lookupvar('lmod::cached_loads') -%>
    export LMOD_CACHED_LOADS=<%= scope.lookupvar('lmod::cached_loads') ? 'yes' : 'no' %>
<% end -%>
  fi

  PS_CMD=/usr/bin/ps
  if [ ! -x $PS_CMD ]; then
      if   [ -x /bin/ps ]; then
          PS_CMD=/bin/ps
      elif [ -x /usr/bin/ps ]; then
          PS_CMD=/usr/bin/ps
      fi
  fi
  EXPR_CMD=/usr/bin/expr
  if [ ! -x $EXPR_CMD ]; then
      if   [ -x /usr/bin/expr ]; then
          EXPR_CMD=/usr/bin/expr
      elif [ -x /bin/expr ]; then
          EXPR_CMD=/bin/expr
      fi
  fi
  BASENAME_CMD=/usr/bin/basename
  if [ ! -x $BASENAME_CMD ]; then
      if   [ -x /bin/basename ]; then
          BASENAME_CMD=/bin/basename
      elif [ -x /usr/bin/basename ]; then
          BASENAME_CMD=/usr/bin/basename
      fi
  fi


  my_shell=$($PS_CMD -p $$ -ocomm=)
  my_shell=$($EXPR_CMD    "$my_shell" : '-*\(.*\)')
  my_shell=$($BASENAME_CMD $my_shell)
  if [ -f <%= scope.lookupvar('lmod::prefix') %>/lmod/lmod/init/$my_shell ]; then
     .    <%= scope.lookupvar('lmod::prefix') %>/lmod/lmod/init/$my_shell >/dev/null # Module Support
  else
     .    <%= scope.lookupvar('lmod::prefix') %>/lmod/lmod/init/sh        >/dev/null # Module Support
  fi
  unset my_shell PS_CMD EXPR_CMD BASENAME_CMD

fi
